Microchip MPLAB XC8 Compiler V1.42 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.42/dat/en_msgs.txt -cs \
  -h+dist/default/production/robbie-pic-motor-controller.X.production.sym \
  --cmf=dist/default/production/robbie-pic-motor-controller.X.production.cmf \
  -z -Q18F14K50 -o/tmp/xcuAgrKEL \
  -Mdist/default/production/robbie-pic-motor-controller.X.production.map \
  -E1 -ver=XC8 -ASTACK=090h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0F53h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0300h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcV9n7POu.obj \
  dist/default/production/robbie-pic-motor-controller.X.production.obj 

Object code version is 3.11

Machine type is 18F14K50

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcV9n7POu.obj
                init                                860      860        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/robbie-pic-motor-controller.X.production.obj
                intcode                               8        8      858        4       0
                temp                                 45       45        1        1       1
                text12                             20E2     20E2       26        4       0
                text10                             20BC     20BC       26        4       0
                text9                              1474     1474      40A        4       0
                text8                               F10      F10      564        4       0
                text7                              1F98     1F98       E0        4       0
                text6                              187E     187E      3DA        4       0
                text5                              1E8A     1E8A      10E        4       0
                text4                               864      864      6AC        4       0
                text3                              2108     2108       22        4       0
                text2                              1C58     1C58      232        4       0
                text1                              2142     2142        E        4       0
                text0                              212A     212A       18        4       0
                cstackCOMRAM                          1        1       38        1       1
                bssBANK0                             60       60       30       60       1
                dataCOMRAM                           42       42        3        1       1
                bssCOMRAM                            39       39        9        1       1
                cinit                              2078     2078       44        4       0
                idataCOMRAM                        2150     2150        3        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8      858         0
                init                                860      860        4         0
                reset_vec                             0        0        4         0
                text12                             20E2     20E2       26         0
                text10                             20BC     20BC       26         0
                text9                              1474     1474      40A         0
                text8                               F10      F10      564         0
                text7                              1F98     1F98       E0         0
                text6                              187E     187E      3DA         0
                text5                              1E8A     1E8A      10E         0
                text4                               864      864      6AC         0
                text3                              2108     2108       22         0
                text2                              1C58     1C58      232         0
                text1                              2142     2142        E         0
                text0                              212A     212A       18         0
                cinit                              2078     2078       44         0
                idataCOMRAM                        2150     2150        3         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 45       45        1         1
                cstackCOMRAM                          1        1       38         1
                dataCOMRAM                           42       42        3         1
                bssCOMRAM                            39       39        9         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                bssBANK0                             60       60       30         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000045  000046         1       1  COMRAM  
                intcode                        000008  00214B  002153         4       0  CODE    
                bssBANK0                       000060  000030  000090        60       1  BANK0   
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000090-0000FF               70
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           000046-00005F               1A
                         000090-0002FF              270
        CODE             000004-000007                4
                         002153-003FFF             1EAD
        COMRAM           000046-00005F               1A
        CONST            000004-000007                4
                         002153-003FFF             1EAD
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      002153-003FFF             1EAD
        RAM              000090-0002FF              100
        SFR              000F53-000FFF                D
        SMALLCONST       002153-003FFF              100
        STACK            000090-0002FF              270

                                  Symbol Table

?___wmul                     cstackCOMRAM 000019
?i2___wmul                   cstackCOMRAM 000001
AccelerateMotor@index        cstackCOMRAM 00002B
AcceleratePWM@index          cstackCOMRAM 000031
CheckPWMOutput@i             cstackCOMRAM 000037
ExponentialProfile@change    cstackCOMRAM 000029
ExponentialProfile@current   cstackCOMRAM 00002A
ExponentialProfile@index     cstackCOMRAM 000020
ExponentialProfile@target    cstackCOMRAM 00001F
InitPWM@i                    cstackCOMRAM 000021
InitPWM@n                    cstackCOMRAM 000023
SetPin@pin                   cstackCOMRAM 000020
SetPin@value                 cstackCOMRAM 00001F
StopMotor@index              cstackCOMRAM 00002B
_AccelCount                  bssCOMRAM    00003B
_AccelRate                   dataCOMRAM   000042
_AccelType                   bssCOMRAM    000040
_AccelerateMotor             text8        000F10
_AccelerateMotor$1271        cstackCOMRAM 00002F
_AccelerateMotor$1272        cstackCOMRAM 000030
_AcceleratePWM               text5        001E8A
_CheckPWMOutput              text4        000864
_ExponentialProfile          text9        001474
_I2C_Slave_Read              intcode      000008
_INTCON2bits                 (abs)        000FF1
_INTCONbits                  (abs)        000FF2
_InitI2C                     text3        002108
_InitPWM                     text2        001C58
_InitPorts                   text1        002142
_LATAbits                    (abs)        000F89
_LATBbits                    (abs)        000F8A
_LATCbits                    (abs)        000F8B
_MinimumDuty                 bssCOMRAM    00003F
_Motors                      bssBANK0     000060
_OSCCONbits                  (abs)        000FD3
_PIE1bits                    (abs)        000F9D
_PIR1bits                    (abs)        000F9E
_PWMEnable                   dataCOMRAM   000044
_PWMPause                    bssCOMRAM    000041
_SSPADD                      (abs)        000FC8
_SSPBUF                      (abs)        000FC9
_SSPCON1bits                 (abs)        000FC6
_SSPCON2bits                 (abs)        000FC5
_SSPSTATbits                 (abs)        000FC7
_SetPin                      text7        001F98
_StopMotor                   text6        00187E
_StopMotor$1269              cstackCOMRAM 00002F
_StopMotor$1270              cstackCOMRAM 000030
_T0CONbits                   (abs)        000FD5
_TMR0                        (abs)        000FD6
_TRISA                       (abs)        000F92
_TRISB                       (abs)        000F93
_TRISC                       (abs)        000F94
_WPUBbits                    (abs)        000F78
__CFG_BBSIZ$OFF              (abs)        000000
__CFG_BOREN$SBORDIS          (abs)        000000
__CFG_BORV$19                (abs)        000000
__CFG_CP0$OFF                (abs)        000000
__CFG_CP1$OFF                (abs)        000000
__CFG_CPB$OFF                (abs)        000000
__CFG_CPD$OFF                (abs)        000000
__CFG_CPUDIV$NOCLKDIV        (abs)        000000
__CFG_EBTR0$OFF              (abs)        000000
__CFG_EBTR1$OFF              (abs)        000000
__CFG_EBTRB$OFF              (abs)        000000
__CFG_FCMEN$OFF              (abs)        000000
__CFG_FOSC$IRC               (abs)        000000
__CFG_HFOFST$ON              (abs)        000000
__CFG_IESO$OFF               (abs)        000000
__CFG_LVP$OFF                (abs)        000000
__CFG_MCLRE$OFF              (abs)        000000
__CFG_PCLKEN$ON              (abs)        000000
__CFG_PLLEN$OFF              (abs)        000000
__CFG_PWRTEN$OFF             (abs)        000000
__CFG_STVREN$ON              (abs)        000000
__CFG_USBDIV$OFF             (abs)        000000
__CFG_WDTEN$OFF              (abs)        000000
__CFG_WDTPS$32768            (abs)        000000
__CFG_WRT0$OFF               (abs)        000000
__CFG_WRT1$OFF               (abs)        000000
__CFG_WRTB$OFF               (abs)        000000
__CFG_WRTC$OFF               (abs)        000000
__CFG_WRTD$OFF               (abs)        000000
__CFG_XINST$OFF              (abs)        000000
__HRAM                       (abs)        000000
__Habs1                      abs1         000000
__Hbank0                     bank0        000000
__Hbank1                     bank1        000000
__Hbank2                     bank2        000000
__Hbigbss                    bigbss       000000
__Hbigdata                   bigdata      000000
__Hbigram                    bigram       000000
__Hbss                       bss          000000
__HbssBANK0                  bssBANK0     000000
__HbssCOMRAM                 bssCOMRAM    000000
__Hcinit                     cinit        000000
__Hclrtext                   clrtext      000000
__Hcomram                    comram       000000
__Hconfig                    config       30000E
__Hconst                     const        000000
__HcstackCOMRAM              cstackCOMRAM 000000
__Hdata                      data         000000
__HdataCOMRAM                dataCOMRAM   000000
__Heeprom_data               eeprom_data  000000
__Hfarbss                    farbss       000000
__Hfardata                   fardata      000000
__Hibigdata                  ibigdata     000000
__Hidata                     idata        000000
__HidataCOMRAM               idataCOMRAM  000000
__Hidloc                     idloc        200008
__Hifardata                  ifardata     000000
__Hinit                      init         000864
__Hintcode                   intcode      000860
__Hintcode_body              intcode_body 000000
__Hintcodelo                 intcodelo    000860
__Hintentry                  intentry     000000
__Hintret                    intret       000000
__Hintsave_regs              intsave_regs 000000
__Hirdata                    irdata       000000
__Hmediumconst               mediumconst  000000
__HnvFARRAM                  nvFARRAM     000000
__Hnvbit                     nvbit        000000
__Hnvrram                    nvrram       000000
__Hparam                     rparam       000000
__Hpowerup                   powerup      000860
__Hram                       ram          000000
__Hramtop                    ramtop       000300
__Hrbit                      rbit         000000
__Hrbss                      rbss         000000
__Hrdata                     rdata        000000
__Hreset_vec                 reset_vec    000004
__Hrparam                    rparam       000000
__Hsfr                       sfr          000000
__Hsmallconst                smallconst   000000
__Hspace_0                   (abs)        30000E
__Hspace_1                   (abs)        000090
__Hspace_2                   (abs)        000000
__Hstack                     stack        000000
__Hstruct                    struct       000000
__Htemp                      temp         000046
__Htext                      text         000000
__Htext0                     text0        000000
__Htext1                     text1        000000
__Htext10                    text10       000000
__Htext12                    text12       000000
__Htext2                     text2        000000
__Htext3                     text3        000000
__Htext4                     text4        000000
__Htext5                     text5        000000
__Htext6                     text6        000000
__Htext7                     text7        000000
__Htext8                     text8        000000
__Htext9                     text9        000000
__LRAM                       (abs)        000001
__Labs1                      abs1         000000
__Lbank0                     bank0        000000
__Lbank1                     bank1        000000
__Lbank2                     bank2        000000
__Lbigbss                    bigbss       000000
__Lbigdata                   bigdata      000000
__Lbigram                    bigram       000000
__Lbss                       bss          000000
__LbssBANK0                  bssBANK0     000000
__LbssCOMRAM                 bssCOMRAM    000000
__Lcinit                     cinit        000000
__Lclrtext                   clrtext      000000
__Lcomram                    comram       000000
__Lconfig                    config       300000
__Lconst                     const        000000
__LcstackCOMRAM              cstackCOMRAM 000000
__Ldata                      data         000000
__LdataCOMRAM                dataCOMRAM   000000
__Leeprom_data               eeprom_data  000000
__Lfarbss                    farbss       000000
__Lfardata                   fardata      000000
__Libigdata                  ibigdata     000000
__Lidata                     idata        000000
__LidataCOMRAM               idataCOMRAM  000000
__Lidloc                     idloc        200000
__Lifardata                  ifardata     000000
__Linit                      init         000860
__Lintcode                   intcode      000008
__Lintcode_body              intcode_body 000000
__Lintcodelo                 intcodelo    000860
__Lintentry                  intentry     000000
__Lintret                    intret       000000
__Lintsave_regs              intsave_regs 000000
__Lirdata                    irdata       000000
__Lmediumconst               mediumconst  000000
__LnvFARRAM                  nvFARRAM     000000
__Lnvbit                     nvbit        000000
__Lnvrram                    nvrram       000000
__Lparam                     rparam       000000
__Lpowerup                   powerup      000860
__Lram                       ram          000000
__Lramtop                    ramtop       000300
__Lrbit                      rbit         000000
__Lrbss                      rbss         000000
__Lrdata                     rdata        000000
__Lreset_vec                 reset_vec    000000
__Lrparam                    rparam       000000
__Lsfr                       sfr          000000
__Lsmallconst                smallconst   000000
__Lspace_0                   (abs)        000000
__Lspace_1                   (abs)        000000
__Lspace_2                   (abs)        000000
__Lstack                     stack        000000
__Lstruct                    struct       000000
__Ltemp                      temp         000045
__Ltext                      text         000000
__Ltext0                     text0        000000
__Ltext1                     text1        000000
__Ltext10                    text10       000000
__Ltext12                    text12       000000
__Ltext2                     text2        000000
__Ltext3                     text3        000000
__Ltext4                     text4        000000
__Ltext5                     text5        000000
__Ltext6                     text6        000000
__Ltext7                     text7        000000
__Ltext8                     text8        000000
__Ltext9                     text9        000000
__S0                         (abs)        30000E
__S1                         (abs)        000090
__S2                         (abs)        000000
___inthi_sp                  stack        000000
___intlo_sp                  stack        000000
___param_bank                (abs)        000000
___rparam_used               (abs)        000001
___sp                        stack        000000
___wmul                      text10       0020BC
___wmul@multiplicand         cstackCOMRAM 00001B
___wmul@multiplier           cstackCOMRAM 000019
___wmul@product              cstackCOMRAM 00001D
__accesstop                  (abs)        000060
__activetblptr               (abs)        000002
__end_of_AccelerateMotor     text8        001474
__end_of_AcceleratePWM       text5        001F98
__end_of_CheckPWMOutput      text4        000F10
__end_of_ExponentialProfile  text9        00187E
__end_of_I2C_Slave_Read      intcode      000860
__end_of_InitI2C             text3        00212A
__end_of_InitPWM             text2        001E8A
__end_of_InitPorts           text1        002150
__end_of_SetPin              text7        002078
__end_of_StopMotor           text6        001C58
__end_of___wmul              text10       0020E2
__end_of__initialization     cinit        0020AE
__end_of_main                text0        002142
__end_ofi2___wmul            text12       002108
__initialization             cinit        002078
__mediumconst                mediumconst  000000
__pbssBANK0                  bssBANK0     000060
__pbssCOMRAM                 bssCOMRAM    000039
__pcinit                     cinit        002078
__pcstackCOMRAM              cstackCOMRAM 000001
__pdataCOMRAM                dataCOMRAM   000042
__pidataCOMRAM               idataCOMRAM  002150
__pintcode                   intcode      000008
__ptext0                     text0        00212A
__ptext1                     text1        002142
__ptext10                    text10       0020BC
__ptext12                    text12       0020E2
__ptext2                     text2        001C58
__ptext3                     text3        002108
__ptext4                     text4        000864
__ptext5                     text5        001E8A
__ptext6                     text6        00187E
__ptext7                     text7        001F98
__ptext8                     text8        000F10
__ptext9                     text9        001474
__ramtop                     ramtop       000300
__size_of_AccelerateMotor    (abs)        000000
__size_of_AcceleratePWM      (abs)        000000
__size_of_CheckPWMOutput     (abs)        000000
__size_of_ExponentialProfile (abs)        000000
__size_of_I2C_Slave_Read     (abs)        000000
__size_of_InitI2C            (abs)        000000
__size_of_InitPWM            (abs)        000000
__size_of_InitPorts          (abs)        000000
__size_of_SetPin             (abs)        000000
__size_of_StopMotor          (abs)        000000
__size_of___wmul             (abs)        000000
__size_of_main               (abs)        000000
__size_ofi2___wmul           (abs)        000000
__smallconst                 smallconst   000000
_currentByte                 bssCOMRAM    00003E
_i                           bssCOMRAM    000039
_main                        text0        00212A
_state                       bssCOMRAM    00003D
btemp                        temp         000045
end_of_initialization        cinit        0020AE
i2___wmul                    text12       0020E2
i2___wmul@multiplicand       cstackCOMRAM 000003
i2___wmul@multiplier         cstackCOMRAM 000001
i2___wmul@product            cstackCOMRAM 000005
int$flags                    temp         000045
intlevel0                    text         000000
intlevel1                    text         000000
intlevel2                    text         000000
intlevel3                    text         000000
stackhi                      (abs)        0002FF
stacklo                      (abs)        000090
start                        init         000860
start_initialization         cinit        002078


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 115 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_CheckPWMOutput
		_InitI2C
		_InitPWM
		_InitPorts
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _InitPorts *****************
 Defined at:
		line 106 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitPWM *****************
 Defined at:
		line 56 in file "pwm.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  n               2   34[COMRAM] unsigned int 
  i               2   32[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_SetPin
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitI2C *****************
 Defined at:
		line 7 in file "i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _CheckPWMOutput *****************
 Defined at:
		line 277 in file "pwm.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   54[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_AcceleratePWM
		_SetPin
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _AcceleratePWM *****************
 Defined at:
		line 244 in file "pwm.c"
 Parameters:    Size  Location     Type
  index           2   48[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_AccelerateMotor
		_StopMotor
		___wmul
 This function is called by:
		_CheckPWMOutput
 This function uses a non-reentrant model


 *************** function _StopMotor *****************
 Defined at:
		line 168 in file "pwm.c"
 Parameters:    Size  Location     Type
  index           2   42[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ExponentialProfile
		_SetPin
		___wmul
 This function is called by:
		_AcceleratePWM
 This function uses a non-reentrant model


 *************** function _SetPin *****************
 Defined at:
		line 10 in file "pwm.c"
 Parameters:    Size  Location     Type
  pin             1    wreg     unsigned char 
  value           1   30[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  pin             1   31[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_InitPWM
		_StopMotor
		_CheckPWMOutput
 This function uses a non-reentrant model


 *************** function _AccelerateMotor *****************
 Defined at:
		line 208 in file "pwm.c"
 Parameters:    Size  Location     Type
  index           2   42[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ExponentialProfile
		___wmul
 This function is called by:
		_AcceleratePWM
 This function uses a non-reentrant model


 *************** function _ExponentialProfile *****************
 Defined at:
		line 117 in file "pwm.c"
 Parameters:    Size  Location     Type
  current         1    wreg     unsigned char 
  target          1   30[COMRAM] unsigned char 
  index           2   31[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  current         1   41[COMRAM] unsigned char 
  change          1   40[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         2       0       0       0
      Temps:          7       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___wmul
 This function is called by:
		_StopMotor
		_AccelerateMotor
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   24[COMRAM] unsigned int 
  multiplicand    2   26[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   28[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   24[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_InitPWM
		_ExponentialProfile
		_StopMotor
		_AccelerateMotor
		_AcceleratePWM
		_CheckPWMOutput
 This function uses a non-reentrant model


 *************** function _I2C_Slave_Read *****************
 Defined at:
		line 90 in file "i2c.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         18       0       0       0
      Totals:        18       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___wmul
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.42/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMRAM] unsigned int 
  multiplicand    2    2[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2    4[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_I2C_Slave_Read
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/Applications/microchip/xc8/v1.42/sources/common/Umul16.c
		___wmul        		CODE           	20BC	0000	39

/Applications/microchip/xc8/v1.42/sources/common/Umul16.c estimated size: 39

i2c.c
		_I2C_Slave_Read		CODE           	0008	0000	2137
		_InitI2C       		CODE           	2108	0000	35

i2c.c estimated size: 2172

pwm.c
		_StopMotor     		CODE           	187E	0000	987
		_AccelerateMotor		CODE           	0F10	0000	1381
		_InitPWM       		CODE           	1C58	0000	563
		_ExponentialProfile		CODE           	1474	0000	1035
		_AcceleratePWM 		CODE           	1E8A	0000	271
		_SetPin        		CODE           	1F98	0000	225
		_CheckPWMOutput		CODE           	0864	0000	1709

pwm.c estimated size: 6171

shared
		i2___wmul      		CODE           	20E2	0000	39
		__initialization		CODE           	2078	0000	55

shared estimated size: 94

main.c
		_InitPorts     		CODE           	2142	0000	15
		_main          		CODE           	212A	0000	25

main.c estimated size: 40

